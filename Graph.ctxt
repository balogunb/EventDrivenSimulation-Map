#BlueJ class context
comment0.target=Graph
comment0.text=\r\n\ This\ class\ serves\ as\ a\ map\ which\ keeps\ track\ of\ roads\ and\ cities\ and\ also\ allows\r\n\ users\ to\ create\ cities\ and\ roads\ while\ also\ linking\ them\ together.\ It\ implements\ \r\n\ a\ HashMap.\r\n\r\n\ @author\ Basit\ Balogun\ &\ Devin\ Murphy\r\n\ @version\ 11/27/2018\r\n
comment1.params=start\ end\ w
comment1.target=void\ addRoad(java.lang.String,\ java.lang.String,\ int)
comment1.text=\r\n\ method\ addRoad\r\n\ @param\ String\ start,\ String\ end,\ int\ w\r\n\ add\ a\ road\ which\ is\ an\ undirected\ edge\r\n
comment2.params=name
comment2.target=City\ getCity(java.lang.String)
comment2.text=\ method\ getCity\r\n\ @param\ String\ name\r\n\ @return\ City\ \r\n\ retrieve\ city\ associated\ with\ the\ given\ name\ or\ create\ new\ city\ if\ city\ doesnt\ exist\r\n
comment3.params=startCity
comment3.target=java.util.ArrayList\ calculatePath(City)
comment3.text=calculatePath\ Method\r\n\ @param\ City\ starCity\r\n\ @return\ ArrayList<WareHouse>\ destinations\r\n\ finds\ the\ shortest\ path\ from\ the\ given\ start\ city\ to\ different\ warehouses\ implementing\r\n\ dijkstra's\ shortest\ path\ algorithm\ and\ returns\ an\ arraylist\ sorted\ by\ city\ \r\ndistance
comment4.params=
comment4.target=void\ reset()
comment4.text=reset\ Method\r\nreset\ the\ parameters\ of\ all\ Cities
numComments=5
